Seq      = require 'seq'
Backbone = require 'backbone'

{ _, op,
} = require 'limn/util'
{ AppView, 
} = require 'limn/app'
{ BaseView, BaseModel, BaseList,
} = require 'limn/base'
{ ChartType, DygraphsChartType,
} = require 'limn/chart'
{ Graph, GraphList, GraphDisplayView,
} = require 'limn/graph'


root = this
CHART_OPTIONS_SPEC    = []
CHART_DEFAULT_OPTIONS = {}


# Create the Graph Scaffold
main = ->
    # Bind to URL changes
    History.Adapter.bind window, 'statechange', ->
        # console.log 'StateChange!\n\n', String(root.location), '\n\n'
    
    
    
    # Process URL
    loc = String root.location
    data = {}
    
    # If we got querystring args, apply them to the graph
    # if loc.split '?' .1
    #     data = _.uncollapseObject _.fromKV that.replace('#', '%23')
    #     data.parents = JSON.parse that if data.parents
    #     data.options = _.synthesize do
    #         data.options or {}
    #         (v, k) -> [ k, dyglib.parseOption(k,v) ]
    
    # Extract id from URL
    if match = /\/graphs\/([^\/?]+)/i.exec loc
        id = match[1]
        data.id = data.slug = id unless _ <[ edit new ]> .contains id
    
    # _.dump _.clone(data.options), 'data.options'
    
    # Instantiate model & view
    root.app = new AppView ->
        @model = root.graph = new Graph data, {+parse}
        @view  = root.view  = new GraphDisplayView {@model}

jQuery main
