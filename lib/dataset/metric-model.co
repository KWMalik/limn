{ _, op,
} = require 'kraken/util'
{ BaseModel, BaseList,
} = require 'kraken/base'


/**
 * @class
 */
Metric = exports.Metric = BaseModel.extend do # {{{
    ctorName : 'Metric'
    urlRoot  : '/metrics'
    
    /**
     * Data source of the Metric.
     * @type DataSource
     */
    source : null
    
    
    constructor: function Metric
        BaseModel ...
    
    initialize : ->
        BaseModel::initialize ...
    
    
    defaults : ->
        index           : 0
        label           : 'New Metric'
        type            : 'int'
        timespan        : { start:null, stop:null, step:null }
        disabled        : false
        
        # DataSource
        source_id       : null
        source_col_idx  : -1
        source_col_name : ''
        
        # Chart Options
        color           : null
        visible         : true
        format_value    : null
        format_axis     : null
        
        scale           : 1.0
        transforms      : []
    
    
    /**
     * Check whether the metric has aiight-looking values so we don't
     * attempt to graph unconfigured crap.
     */
    isOk: ->
        (label = @get('label')) and label is not 'New Metric'
        and @get('source_id')   and @get('source_col_idx') >= 0
        and _.every @get('timespan'), op.ok
    
    
    
# }}}


/**
 * @class
 */
MetricList = exports.MetricList = BaseList.extend do # {{{
    ctorName : 'MetricList'
    urlRoot  : '/metrics'
    model    : Metric
    
    constructor: function MetricList then BaseList ...
# }}}
