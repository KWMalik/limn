Seq = require 'seq'
{ _, op,
} = require 'kraken/util'
{ BaseView, BaseModel, BaseList,
} = require 'kraken/base'
{   Field, FieldList, FieldView, Scaffold,
} = require 'kraken/scaffold'
{   GraphOption, GraphOptionList, GraphOptionView,
    GraphOptionsScaffold, TagSet,
} = require 'kraken/graph'
{ VisView, VisModel,
} = require 'kraken/vis'

root = this
CHART_OPTIONS_SPEC = []
ROOT_VIS_DATA      = {}
ROOT_VIS_OPTIONS   = {}


# Create the Graph Scaffold
main = ->
    # TODO: create a preset manager
    # Remove chart options from data so we don't have to deepcopy
    ROOT_VIS_OPTIONS := delete root.ROOT_VIS_DATA.options
    
    # Bind to URL changes
    History.Adapter.bind window, 'statechange', ->
        console.log 'StateChange!', String(root.location)
    
    
    # If we got querystring args, apply them to the graph
    data = {}
    if String(root.location).split '?' .1
        data = _.uncollapseObject _.fromKVPairs that.replace('#', '%23')
        
        # # yarr, have to do options separately or everything goes to shit
        # options = delete data.options
        # graph.model.set data, {+silent}
        # graph.chartOptions options, {+silent}
        # # Flush all changes once the DOM settles
        # _.delay do
        #     ->
        #         graph.change()
        #         # graph.scaffold.invoke 'change'
        #     50
    
    
    vis   = root.vis   = new VisModel data
    graph = root.graph = new VisView do
        graph_spec : root.CHART_OPTIONS_SPEC
        model      : vis
    
    $ '#content .inner' .append graph.el



# Load data files
Seq([   <[ CHART_OPTIONS_SPEC /graph/dygraph-options.json ]>,
        <[ ROOT_VIS_DATA /presets/root.json ]>
])
.parEach_ (next, [key, url]) ->
    jQuery.ajax do
        url : url,
        dataType : 'json'
        success : (data) ->
            root[key] = data
            next.ok()
        error : (err) -> console.error err
.seq ->
    console.log 'All data loaded!'
    jQuery main

