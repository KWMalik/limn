require.define('/node_modules/kraken/template/graph/graph-edit.jade.js.js', function(require, module, exports, __dirname, __filename, undefined){

var template = function (locals, attrs, escape, rethrow) {
var attrs = jade.attrs, escape = jade.escape, rethrow = jade.rethrow;
var buf = [];
with (locals || {}) {
var interp;
 var graph_id = view.id || model.id || model.cid
buf.push('\n<section');
buf.push(attrs({ 'id':(graph_id), "class": ('graph-edit') + ' ' + ('graph') }));
buf.push('>\n  <div');
buf.push(attrs({ "class": ('graph-name-row') + ' ' + ('graph-details') + ' ' + ('row-fluid') + ' ' + ('control-group') }));
buf.push('>\n    <input');
buf.push(attrs({ 'type':('text'), 'id':("" + (graph_id) + "_name1"), 'name':("name"), 'placeholder':('Graph Name'), 'value':(name), "class": ('span6') + ' ' + ('graph-name') }));
buf.push('/>\n  </div>\n  <div');
buf.push(attrs({ "class": ('graph-viewport-row') + ' ' + ('row-fluid') }));
buf.push('>\n    <div');
buf.push(attrs({ "class": ('viewport') }));
buf.push('>\n    </div>\n    <div');
buf.push(attrs({ "class": ('graph-legend') }));
buf.push('>\n    </div>\n  </div>\n  <div');
buf.push(attrs({ "class": ('graph-settings-row') + ' ' + ('row-fluid') }));
buf.push('>\n    <div');
buf.push(attrs({ "class": ('graph-settings') + ' ' + ('tabbable') }));
buf.push('>\n      <nav');
buf.push(attrs({ "class": ('graph-settings-nav') }));
buf.push('>\n        <div');
buf.push(attrs({ "class": ('graph-controls') + ' ' + ('pull-right') }));
buf.push('>\n          <div');
buf.push(attrs({ "class": ('btn-group') }));
buf.push('><a');
buf.push(attrs({ 'href':("#"), "class": ('redraw-button') + ' ' + ('btn') }));
buf.push('><i');
buf.push(attrs({ "class": ('icon-refresh') }));
buf.push('></i> Redraw\n</a>\n          </div>\n          <div');
buf.push(attrs({ "class": ('btn-group') }));
buf.push('><a');
buf.push(attrs({ 'href':("#"), "class": ('load-button') + ' ' + ('btn') }));
buf.push('><i');
buf.push(attrs({ "class": ('icon-download') }));
buf.push('></i> Revert\n</a><a');
buf.push(attrs({ 'href':("#"), "class": ('save-button') + ' ' + ('btn') }));
buf.push('><i');
buf.push(attrs({ "class": ('icon-upload') }));
buf.push('></i> Save\n</a><a');
buf.push(attrs({ 'href':("#"), "class": ('done-button') + ' ' + ('btn-primary') + ' ' + ('btn') }));
buf.push('><i');
buf.push(attrs({ "class": ('icon-ok-sign') + ' ' + ('icon-white') }));
buf.push('></i> Done\n</a>\n          </div>\n        </div>\n        <ul');
buf.push(attrs({ "class": ('nav') + ' ' + ('subnav') + ' ' + ('nav-pills') }));
buf.push('>\n          <li>\n            <div');
buf.push(attrs({ "class": ('graph-spinner') }));
buf.push('>\n            </div>\n            <h3>Graph\n            </h3>\n          </li>\n          <li');
buf.push(attrs({ "class": ('active') }));
buf.push('><a');
buf.push(attrs({ 'href':("#" + (graph_id) + "-tab-info"), 'data-toggle':("tab"), "class": ('graph-info-tab') }));
buf.push('>Info</a>\n          </li>\n          <li><a');
buf.push(attrs({ 'href':("#" + (graph_id) + "-tab-data"), 'data-toggle':("tab"), "class": ('graph-data-tab') }));
buf.push('>Data</a>\n          </li>\n          <li><a');
buf.push(attrs({ 'href':("#" + (graph_id) + "-tab-options"), 'data-toggle':("tab"), "class": ('graph-options-tab') }));
buf.push('>Options</a>\n          </li>\n        </ul>\n        <div');
buf.push(attrs({ "class": ('nav-shadow-shim') }));
buf.push('>\n        </div>\n        <div');
buf.push(attrs({ "class": ('nav-shadow') }));
buf.push('>\n        </div>\n      </nav>\n      <div');
buf.push(attrs({ "class": ('graph-tab-content') + ' ' + ('tab-content') }));
buf.push('>\n        <div');
buf.push(attrs({ 'id':("" + (graph_id) + "-tab-info"), "class": ('graph-info-pane') + ' ' + ('tab-pane') + ' ' + ('active') }));
buf.push('>\n          <form');
buf.push(attrs({ "class": ('graph-details') + ' ' + ('form-horizontal') }));
buf.push('>\n            <input');
buf.push(attrs({ 'type':("hidden"), 'id':("" + (graph_id) + "_name"), 'name':("name"), 'value':(name), "class": ('graph-name') }));
buf.push('/>\n            <div');
buf.push(attrs({ "class": ('row-fluid') }));
buf.push('>\n              <div');
buf.push(attrs({ "class": ('half') + ' ' + ('control-group') }));
buf.push('>\n                <div');
buf.push(attrs({ "class": ('control-group') }));
buf.push('>\n                  <label');
buf.push(attrs({ 'for':("" + (graph_id) + "_slug"), "class": ('slug') + ' ' + ('control-label') }));
buf.push('>Slug\n                  </label>\n                  <div');
buf.push(attrs({ "class": ('controls') }));
buf.push('>\n                    <input');
buf.push(attrs({ 'type':('text'), 'id':("" + (graph_id) + "_slug"), 'name':('slug'), 'placeholder':('graph_slug'), 'value':(slug), "class": ('span3') + ' ' + ('slug') }));
buf.push('/>\n                    <p');
buf.push(attrs({ "class": ('help-block') }));
buf.push('>The slug uniquely identifies this graph and will be displayed in the URL once saved.\n                    </p>\n                  </div>\n                </div>\n                <div');
buf.push(attrs({ "class": ('control-group') }));
buf.push('>\n                  <label');
buf.push(attrs({ 'for':("" + (graph_id) + "_width"), "class": ('width') + ' ' + ('control-label') }));
buf.push('>Size\n                  </label>\n                  <div');
buf.push(attrs({ "class": ('controls') }));
buf.push('>\n                    <input');
buf.push(attrs({ 'type':('text'), 'id':("" + (graph_id) + "_width"), 'name':('width'), 'value':(width), "class": ('span1') + ' ' + ('width') }));
buf.push('/> &times; \n\n                    <input');
buf.push(attrs({ 'type':('text'), 'id':("" + (graph_id) + "_height"), 'name':('height'), 'value':(height), "class": ('span1') + ' ' + ('height') }));
buf.push('/>\n                    <p');
buf.push(attrs({ "class": ('help-block') }));
buf.push('>Choosing \'auto\' will size the graph to the viewport bounds.\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div');
buf.push(attrs({ "class": ('half') + ' ' + ('control-group') }));
buf.push('>\n                <label');
buf.push(attrs({ 'for':("" + (graph_id) + "_desc"), "class": ('desc') + ' ' + ('control-label') }));
buf.push('>Description\n                </label>\n                <div');
buf.push(attrs({ "class": ('controls') }));
buf.push('><textarea class="span3 desc" id="' + escape((interp = graph_id) == null ? '' : interp) + '_desc" name="desc" placeholder="Graph description.">' + escape((interp = desc) == null ? '' : interp) + '</textarea>\n\n                  <p');
buf.push(attrs({ "class": ('help-block') }));
buf.push('>A description of the graph.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div');
buf.push(attrs({ 'id':("" + (graph_id) + "-tab-data"), 'data-subview':("DataView"), "class": ('graph-data-pane') + ' ' + ('tab-pane') }));
buf.push('>\n        </div>\n        <div');
buf.push(attrs({ 'id':("" + (graph_id) + "-tab-options"), 'data-subview':("ChartOptionScaffold"), "class": ('graph-options-pane') + ' ' + ('tab-pane') }));
buf.push('>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>');
}
return buf.join("");
};
if (typeof module != 'undefined') {
    module.exports = exports = template;
}

});
